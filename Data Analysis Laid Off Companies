-- Exploratory Data Analysis

SELECT * 
FROM layoffs_staging2;

SELECT MAX(total_laid_off), MAX(percentage_laid_off) -- Max total company laid off in one day
FROM layoffs_staging2; 

SELECT *  -- Companies that loss all their employees AND order by descending order from the highest funded
FROM layoffs_staging2
WHERE percentage_laid_off = 1 
ORDER BY funds_raised_millions DESC;

SELECT company, SUM(total_laid_off) -- number of employees laid off in total in descending order by company 
FROM layoffs_staging2
GROUP BY company
ORDER BY 2 DESC; 

SELECT MIN(`date`), MAX(`date`)  -- what is the min and max date of the database
FROM layoffs_staging2;

SELECT industry, SUM(total_laid_off) -- number off employees laid off in total in descending order by industry sector 
FROM layoffs_staging2
GROUP BY industry
ORDER BY 2 DESC; 

SELECT country, SUM(total_laid_off) -- number off employees laid off in total in descending order by country 
FROM layoffs_staging2
GROUP BY country
ORDER BY 2 DESC; 

SELECT `date`, SUM(total_laid_off) -- number off employees laid off in total in descending order by date 
FROM layoffs_staging2
GROUP BY `date`
ORDER BY 1 DESC; -- Descending by date

SELECT YEAR(`date`), SUM(total_laid_off) -- number off employees laid off in total in descending order by year 
FROM layoffs_staging2
GROUP BY YEAR(`date`)
ORDER BY 1 DESC; -- Descending by year

WITH Rolling_Total AS
(
SELECT SUBSTRING(`date`,1,7) AS `MONTH`, SUM(total_laid_off) AS total_off  -- number off employees laid off in total in ascending order by year, month adding up the previous month total to the next one. 
FROM layoffs_staging2
WHERE SUBSTRING(`date`,1,7) IS NOT NULL
GROUP BY `MONTH`
ORDER BY 1 ASC
)
SELECT `MONTH`, SUM(total_off) OVER(ORDER BY `MONTH`) AS Rolling_Total
FROM Rolling_Total;

SELECT company, YEAR(`date`), SUM(total_laid_off) -- number of employees laid off by company and per year
FROM layoffs_staging2
GROUP BY company, YEAR(`date`)
ORDER BY 3 ASC; 

WITH Company_Year (company, years, total_laid_off) AS 
(
SELECT company, YEAR(`date`), SUM(total_laid_off) 
FROM layoffs_staging2
GROUP BY company, YEAR(`date`)
), Company_Year_Rank AS 
(SELECT *, 
DENSE_RANK() OVER (PARTITION BY years ORDER BY total_laid_off DESC) AS Ranking
FROM Company_Year
WHERE years IS NOT NULL
)
SELECT *
FROM Company_Year_Rank
WHERE Ranking <= 5; -- Top 5 of employees lay off by company per year
