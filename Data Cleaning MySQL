-- Data Cleaning

SELECT *
FROM layoffs;


-- 1.Remove Duplicates 	(repetative or innecessary data)
-- 2. Standarize data 	(Issue with spelling )
-- 3. Null values or blank values
-- 4. Remove Any Columns

-- A. Create a table to copy the raw data to work on. 

CREATE TABLE layoffs_staging
LIKE layoffs; 

SELECT * 
FROM layoffs_staging;

INSERT layoffs_staging
SELECT * 
FROM layoffs; 

-- 1. Duplicates 

SELECT * 
FROM layoffs_staging;


WITH duplicate_cte AS
(
SELECT *,
ROW_NUMBER() OVER(
PARTITION BY company, location, industry, total_laid_off, percentage_laid_off, `date`, stage, country, funds_raised_millions) AS row_num 
FROM layoffs_staging
)
SELECT * 
FROM duplicate_cte
WHERE row_num > 1;

SELECT *
FROM layoffs_staging
WHERE company = 'Casper' ; -- 3 rows found and two of them have NULL data for total_laid_off

SELECT *
FROM layoffs_staging
WHERE company = 'Casper' AND total_laid_off IS NULL; -- verification of two rows to be deleted

DELETE
FROM layoffs_staging
WHERE company = 'Casper' AND total_laid_off IS NULL; -- 2 rows deleted.


SELECT *
FROM layoffs_staging
WHERE company = 'Cazoo' ; -- 3 rows, one duplicate and one NULL value for total_laid_off and percentage_laid_off
    
DELETE
FROM layoffs_staging
WHERE company = 'Cazoo' AND total_laid_off IS NULL; --  1 row deleted
    
SELECT *
FROM layoffs_staging
WHERE company = 'Hibob' ;   

SELECT *
FROM layoffs_staging
WHERE company = 'Wildlife Studios' ;

SELECT *
FROM layoffs_staging
WHERE company = 'Yahoo' ;     

WITH duplicate_cte AS
(
SELECT *,
ROW_NUMBER() OVER(
PARTITION BY company, location, industry, total_laid_off, percentage_laid_off, `date`, stage, country, funds_raised_millions) AS row_num 
FROM layoffs_staging
)
DELETE
FROM duplicate_cte
WHERE row_num > 1; -- after check each row that has only duplicates, it can be deleted those rows



-- Noted below a new table is created in order to remove duplicates using the row_num

CREATE TABLE `layoffs_staging2` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` text,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
  `row_num` INT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

SELECT *
FROM layoffs_staging2;

INSERT INTO layoffs_staging2
SELECT *,
ROW_NUMBER() OVER(
PARTITION BY company, location, industry, total_laid_off, percentage_laid_off, `date`, stage, country, funds_raised_millions) AS row_num 
FROM layoffs_staging;

SELECT *
FROM layoffs_staging2
WHERE row_num > 1;

DELETE
FROM layoffs_staging2
WHERE row_num > 1;

SELECT *
FROM layoffs_staging2;

-- Standardizing data

SELECT *
FROM layoffs_staging2;

SELECT company, TRIM(company)
FROM layoffs_staging2;

UPDATE layoffs_staging2
SET company = TRIM(company);

SELECT DISTINCT industry
FROM layoffs_staging2
ORDER BY 1;

SELECT *
FROM layoffs_staging2
where industry LIKE 'Crypto%'; 

UPDATE layoffs_staging2
SET industry = 'Crypto'
WHERE industry LIKE 'Crypto%';

SELECT DISTINCT industry
FROM layoffs_staging2;

SELECT DISTINCT location
FROM layoffs_staging2
ORDER BY 1;

SELECT DISTINCT COUNTRY
FROM layoffs_staging2
ORDER BY 1;

SELECT *
FROM layoffs_staging2
WHERE country LIKE 'United States%'
ORDER BY 1;

SELECT DISTINCT country, TRIM(TRAILING '.' FROM country) -- Remove the period at the end of the word
FROM layoffs_staging2
ORDER BY 1;

UPDATE layoffs_staging2 
SET country = TRIM(TRAILING '.' FROM country)
WHERE country LIKE 'United States%';

SELECT `date`, -- convert the text data to date in the column
STR_TO_DATE(`date`, '%m/%d/%Y' )
FROM layoffs_staging2;

UPDATE layoffs_staging2
SET `date` = STR_TO_DATE(`date`, '%m/%d/%Y' );

SELECT `date`
FROM layoffs_staging2;

ALTER TABLE layoffs_staging2
MODIFY COLUMN `date` DATE;  -- change the format of the field from text to date

SELECT *
FROM layoffs_staging2;

-- NULL data  checking 

SELECT * 
FROM layoffs_staging2
WHERE total_laid_off IS NULL
OR percentage_laid_off IS null;

SELECT *
FROM layoffs_staging2
WHERE industry IS NULL
OR industry = ' ';

SELECT *
FROM layoffs_staging2
WHERE company = 'Airbnb' ;

SELECT t1.industry, t2.industry
FROM layoffs_staging2 t1
JOIN layoffs_staging2 t2 
	ON t1.company = t2.company
WHERE (t1.industry IS NULL OR t1.industry = '') -- blank is without space
AND t2.industry IS NOT NULL; 

UPDATE layoffs_staging2
SET industry = NULL
WHERE industry = '';

SELECT *
FROM layoffs_staging2
WHERE total_laid_off IS NULL
AND percentage_laid_off IS NULL;

-- remove the data that we wont use it

DELETE			
FROM layoffs_staging2
WHERE total_laid_off IS NULL
AND percentage_laid_off IS NULL;

-- remove a column
ALTER TABLE layoffs_staging2
DROP COLUMN row_num; 

