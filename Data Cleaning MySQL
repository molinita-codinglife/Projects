-- Data Cleaning

SELECT *
FROM layoffs;


-- 1.Remove Duplicates 	(repetative or innecessary data)
-- 2. Standarize data 	(Issue with spelling )
-- 3. Null values or blank values
-- 4. Remove Any Columns

-- 1. Create a table to work on 

CREATE TABLE layoffs_staging
LIKE layoffs; 

SELECT * 
FROM layoffs_staging;

INSERT layoffs_staging
SELECT * 
FROM layoffs; 

-- There always good to work with a copy of the raw of data

-- 1. Duplicates 

SELECT * 
FROM layoffs_staging;


WITH duplicate_cte AS
(
SELECT *,
ROW_NUMBER() OVER(
PARTITION BY company, location, industry, total_laid_off, percentage_laid_off, `date`, stage, country, funds_raised_millions) AS row_num 
FROM layoffs_staging
)
SELECT * 
FROM duplicate_cte
WHERE row_num > 1;

SELECT *
FROM layoffs_staging
WHERE company = 'Casper' ;


SELECT *
FROM layoffs_staging
WHERE company = 'Cazoo' ;
    
    
SELECT *
FROM layoffs_staging
WHERE company = 'Hibob' ;   

SELECT *
FROM layoffs_staging
WHERE company = 'Wildlife Studios' ;

SELECT *
FROM layoffs_staging
WHERE company = 'Yahoo' ;     



CREATE TABLE `layoffs_staging2` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` text,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
  `row_num` INT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

SELECT *
FROM layoffs_staging2;

INSERT INTO layoffs_staging2
SELECT *,
ROW_NUMBER() OVER(
PARTITION BY company, location, industry, total_laid_off, percentage_laid_off, `date`, stage, country, funds_raised_millions) AS row_num 
FROM layoffs_staging;

SELECT *
FROM layoffs_staging2
WHERE row_num > 1;

DELETE
FROM layoffs_staging2
WHERE row_num > 1;




